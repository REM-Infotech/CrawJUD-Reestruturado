from typing import Any, Iterator, Protocol

class ArrayList(Protocol):
    def __init__(self, initial: list[Any] = ...) -> None: ...
    def add(self, element: Any) -> bool: ...
    def addAll(self, collection: list[Any]) -> bool: ...  # noqa: N802
    def clear(self) -> None: ...
    def contains(self, element: Any) -> bool: ...
    def get(self, index: int) -> Any: ...
    def indexOf(self, element: Any) -> int: ...  # noqa: N802
    def isEmpty(self) -> bool: ...  # noqa: N802
    def iterator(self) -> Iterator[Any]: ...
    def remove(self, element: Any) -> bool: ...
    def removeAt(self, index: int) -> Any: ...  # noqa: N802
    def size(self) -> int: ...
    def toArray(self) -> list[Any]: ...  # noqa: N802
    def set(self, index: int, element: Any) -> Any: ...
    def subList(self, fromIndex: int, toIndex: int) -> ArrayList: ...  # noqa: N802, N803
